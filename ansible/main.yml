---
- hosts: k3s_cluster
  become: true
  gather_facts: true

  pre_tasks:
    # # Enable this if you run into issues updating
    # - name: Reset dpkg
    #   command: dpkg --configure -a

    - name: Upgrade system
      apt:
        upgrade: dist
        # Need the force_apt_get until
        # https://github.com/ansible/ansible/issues/56832
        force_apt_get: true
      register: apt_upgrade
      retries: 5
      until: apt_upgrade is success

    - name: Upgrade all packages to the latest version
      apt:
        name: "*"
        state: latest
        # Need the force_apt_get until
        # https://github.com/ansible/ansible/issues/56832
        force_apt_get: true
      register: apt_update
      retries: 5
      until: apt_update is success

    - name: Install Common Packages
      apt:
        name:
          - apt-transport-https
          - arptables
          - ca-certificates
          - curl
          - dnsutils
          - ebtables
          - ethtool
          - git
          - gnupg-agent
          - gnupg2
          - haveged
          - hdparm
          - htop
          - iperf3
          - iputils-ping
          - lvm2
          - neofetch
          - net-tools
          - nfs-common
          - nmap
          - ntpdate
          - psmisc
          - python3
          - python3-pip
          - rsync
          - socat
          - software-properties-common
          - traceroute
          - unattended-upgrades
        install_recommends: false
        update_cache: true
        # Need the force_apt_get until
        # https://github.com/ansible/ansible/issues/56832
        force_apt_get: true
      register: apt_install_common
      retries: 5
      until: apt_install_common is success

    - name: Clean up apt
      apt:
        autoremove: true
        # Need the force_apt_get until
        # https://github.com/ansible/ansible/issues/56832
        force_apt_get: true

  roles:
    - { role: prepare_nodes/system }
    - { role: prepare_nodes/unattended_upgrades }
    - { role: prepare_nodes/user }
    - { role: prepare_nodes/networking }
    - { role: xanmanning.k3s }

#    - name: Rebooting hosts
#      reboot:
#        msg: "Systems are being rebooted"
#        reboot_timeout: 60
#      ignore_errors: true

- hosts: master
  gather_facts: true
  become: true
  roles:
    - { role: kubeconfig }

- hosts: localhost
  gather_facts: false
  become: false
  roles:
    - { role: k3s/bootstrap }
    - { role: flux }
    - { role: helm_operator, when: helm_operator == true }
